name: "Set up get-tested"
description: "Fetches the get-tested tool"

inputs:
  version:
    description: "The version of the get-tested tool. Defaults to 'latest' if unspecified."
    required: false
    default: ""
  directory:
    description: "The directory where the get-tested executable should be placed."
    required: false
    default: "."

outputs:
  path:
    description: "The path to the get-tested executable."
    value: ${{ steps.setup.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: Set up get-tested
      id: setup
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        tmpdir="$(mktemp -d "${RUNNER_TEMP}/setup-get-tested.XXXXXX")"

        os="$(uname | tr '[:upper:]' '[:lower:]')"
        case "$os" in
        msys*|mingw*|cygwin*)
        os="windows"
        # On Windows runners, convert D:\... to /d/...
        tmpdir="$(cygpath -u "$tmpdir")"
        directory_posix="$(cygpath -u "${{ inputs.directory }}")"
        outfile="get-tested.zip"
        ;;
        *)
        directory_posix="${{ inputs.directory }}"
        outfile="get-tested.tar.gz"
        ;;
        esac

        trap "rm -rf ${tmpdir}" EXIT
        if [[ "$os" == "darwin" ]]; then
         pattern='get-tested-*-macOS-arm64.tar.gz'
        elif [[ "$os" == "linux" ]]; then
          pattern='get-tested-*-Linux-static-x86_64.tar.gz'
        else
          pattern='get-tested-*-Windows-x86_64.zip'
        fi
        echo 'chose '$pattern' for ::'$os'::'

        trap "rm -rf ${tmpdir}" EXIT

        gh_release_flags=(
        --repo Kleidukos/get-tested
        --pattern "$pattern"
        --output "${tmpdir}/${outfile}"
        )

        if [[ "${{ inputs.version }}" != "" ]]; then
        gh release download "v${{ inputs.version }}" "${gh_release_flags[@]}"
        else
        gh release download "${gh_release_flags[@]}"
        fi

        mkdir -p "$directory_posix"
        if [[ "$os" == "windows" ]]; then
          unzip -o "${tmpdir}/${outfile}" -d "$directory_posix"
        else
          tar -xvzf "${tmpdir}/${outfile}" -C "$directory_posix"
        fi

        path="${directory_posix}/get-tested"
        chmod a+x "$path"
        echo "path=${path}" >> "${GITHUB_OUTPUT}"

branding:
  icon: 'list'
  color: 'blue'
