name: "Test supported GHC versions"
description: "Generate a test matrix from your cabal file's `tested-with` stanza"

inputs:
  cabal-file:
    description: "The path to your cabal file, e.g. somefolder/myproject.cabal"
    required: true
  version:
    description: "Version of the get-tested tool"
    required: false
    default: ""
  windows:
    description: "(legacy) Enable Windows runner, latest version"
    required: false
    default: false
  windows-version:
    description: "Enable Windows runner. If both `windows` and `windows-version` inputs are set, the explicit version will take priority"
    required: false
    default: ""
  macos:
    description: "(legacy) Enable macOS runner, latest version"
    required: false
    default: false
  macos-version:
    description: "Enable macOS runner.  If both `macos` and `macos-version` inputs are set, the explicit version will take priority"
    required: false
    default: ""
  ubuntu:
    description: "(legacy) Enable Ubuntu runner, latest version"
    required: false
    default: false
  ubuntu-version:
    description: "Enable Ubuntu runner.  If both `ubuntu` and `ubuntu-version` inputs are set, the explicit version will take priority"
    required: false
    default: ""

outputs:
  matrix:
    description: "The GHC version matrix"
    value: ${{ steps.set-matrix.outputs.matrix }}

runs:
  using: "composite"
  steps:
    - name: Checkout base repo
      uses: actions/checkout@v4

    - name: Set up get-tested
      uses: ./setup-get-tested
      with:
        version: ${{ inputs.version }}

    - name: Set up options
      shell: bash
      run: |
        echo "::debug:: macOS: ${{ inputs.macos-version }}"
        echo "::debug:: windows: ${{ inputs.windows-version }}"
        echo "::debug:: ubuntu: ${{ inputs.ubuntu-version }}"

        if [[ "${{ inputs.windows-version }}" != "" ]]
        then
          echo "::debug:: Windows explicit enabled: ${{ inputs.windows-version }}"
          echo "WINDOWS=--windows-version=${{ inputs.windows-version }}" >> $GITHUB_ENV
        elif [[ ${{ inputs.windows }} == "true" ]]
        then
          echo "::debug:: Windows fallback enabled: ${{ inputs.windows }}"
          echo "WINDOWS=--windows" >> $GITHUB_ENV
        else echo "WINDOWS=" >> $GITHUB_ENV
        fi

        if [[ "${{ inputs.macos-version }}" != "" ]]
        then
          echo "::debug:: macOS explicit version enabled: ${{ inputs.macos-version }}"
          echo "MACOS=--macos-version=${{ inputs.macos-version }}" >> $GITHUB_ENV
        elif [[ ${{ inputs.macos }} == "true" ]]
        then
          echo "::debug:: macOS fallback enabled: ${{ inputs.macos }}"
          echo "MACOS=--macos" >> $GITHUB_ENV
        else echo "MACOS=" >> $GITHUB_ENV
        fi

        if [[ "${{ inputs.ubuntu-version }}" != "" ]]
        then
          echo "::debug:: Ubuntu explicit version enabled: ${{ inputs.ubuntu-version }}"
          echo "UBUNTU=--ubuntu-version=${{ inputs.ubuntu-version }}" >> $GITHUB_ENV
        elif [[ ${{ inputs.ubuntu }} == "true" ]]
        then
          echo "::debug:: Ubuntu fallback enabled: ${{ inputs.ubuntu }}"
          echo "UBUNTU=--ubuntu" >> $GITHUB_ENV
        else echo "UBUNTU=" >> $GITHUB_ENV
        fi

    - name: Extract the tested GHC versions
      id: set-matrix
      shell: bash
      run: |
        ./get-tested $WINDOWS $MACOS $UBUNTU ${{ inputs.cabal-file }} >> $GITHUB_OUTPUT

branding:
  icon: 'list'
  color: 'blue'
